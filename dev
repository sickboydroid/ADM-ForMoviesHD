#!/bin/bash

# Compiles whole android project
compile_proj () {
    # Generare build and other necessary directrories if they don't exist
    [ ! -d "app/build/bin" ] && mkdir -p app/build/bin
    [ ! -d "app/build/gen" ] && mkdir -p app/build/gen
    [ ! -d "app/build/obj" ] && mkdir -p app/build/obj
    [ ! -f "app/src/main/AndroidManifest.xml" ] && mkdir -p app/src/main/AndroidManifest.xml
    [ ! -d "app/src/main/res" ] && mkdir -p app/src/main/res
    [ ! -d "app/src/main/java" ] && mkdir -p app/src/main/java
    [ ! -d "app/src/main/assets" ] && mkdir -p app/src/main/assets
    
    # Generate R.java for resources
    echo "Generating <R.java>..."
    aapt package -f -m \
       	-M "app/src/main/AndroidManifest.xml" \
       	-J "app/build/gen" \
       	-S "app/src/main/res"
    if [ $? -ne 0 ]
    then
	echo "--------------------------"
	return -1
    fi
    printf "done\n\n"

    # Compile java files
    echo "Compile <java> code..."
    ecj -d app/build/obj app/build/gen app/src/main/java
    if [ $? -ne 0 ]
    then
	return -1
    fi
    printf "done\n\n"

    # Convert java bite code to dx
    echo "Dexing <java> code..."
    d8 --output app/build/bin $(find app/build/obj -name "*.class" -type f)
    if [ $? -ne 0 ]
    then
	echo "--------------------------"
	return -1
    fi
    printf "done\n\n"

    # Create resource.apk from res folder
    echo "Creating <resources> archive..."
    aapt package -f \
	 --min-sdk-version 19 \
	 --target-sdk-version 29 \
       	-M app/src/main/AndroidManifest.xml \
       	-S app/src/main/res \
       	-A app/src/main/assets \
       	-F app/build/bin/"resources.apk"
    if [ $? -ne 0 ]
    then
	echo "--------------------------"
	return -1
    fi
    printf "done\n\n"

    cd app/build/bin
    # Add generated dex file to resources
    echo "Generating <apk> file..."
    aapt add -f "resources.apk" "classes.dex"
    if [ $? -ne 0 ]
    then
	echo "--------------------------"
	return -1
    fi
    cp resources.apk adm-unsigned.apk
    printf "done\n\n"

    # Copy app
    echo "Copying <apk> file to </sdcard/SickBoyDir/temp/adm-unsigned.apk>..."
    cp adm-unsigned.apk /sdcard/SickBoyDir/temp
    printf "done\n\n"
    cd ../../..
}

##############################
echo """
------------------------------
WARNING: I (sickboydroid) made this script to automate my setup on terminal.
         I Don't think it would work for you.
         However, you can build this apk like the rest of apps.
------------------------------
"""
# Get name and external dir of project
PROJECT_NAME=$(basename "$PWD")
PROJ_EXT_DIR="$HOME/.android/projs/ADM"

rm -rf app/build
compile_proj "$PROJECT_NAME"
